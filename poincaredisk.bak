#lang racket
(require 2htdp/image)
(require lang/posn)



(define points (list (make-posn 0 0)
                     (make-posn 1 0)
                     (make-posn 0 1)
                     (make-posn -1 0)
                     (make-posn 0 -1)
                     (make-posn (cos (/ pi 4))
                                (sin (/ pi 4)))))

(define circles empty)

(define (normalize-pd p)
  (make-posn
   ; we want x = 0 -> 250
   (+ 250 (* (posn-x p) 200))
   
   ; we want y = 0 -> 250
   (+ 250 (* (posn-y p) -200))
   ))


(define (normalize-all-pd lop)
  (map normalize-pd lop))

(define (draw-points w)
  (foldl
    (lambda (p img)
      (place-image (circle 2 "solid" "red")
                   (posn-x p) (posn-y p)
                   img))
    w
    (normalize-all-pd points)))


(define pd-graph
  (overlay
   (circle 200 "outline" "black")
   (empty-scene 500 500)))

(define (draw w)
  (draw-points w))


pd-graph